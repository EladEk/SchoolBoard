rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // PUBLIC READ (hallway screens need to read freely)
    match /classes/{id} {
      allow read: if true;
      allow write: if true;   // frontend enforces "admin" in UI
    }
    match /lessons/{id} {
      allow read: if true;
      allow write: if true;   // frontend enforces "admin" in UI
    }
    match /timetableEntries/{id} {
      allow read: if true;
      allow write: if true;   // frontend enforces "admin" in UI
    }
    match /announcements/{id} {
      allow read: if true;
      allow write: if true;   // frontend enforces "admin" in UI
    }

    // CUSTOM AUTH USERS COLLECTION (no Firebase Auth)
    // Your app uses /appUsers with local hashing + localStorage.
    match /appUsers/{docId} {
      allow read: if true;
      allow write: if true;   // needed for Admin â†’ Create/Delete user
    }

    // OPTIONAL/LEGACY: if you still have these in the DB, keep them readonly:
    match /users/{userId} {
      allow read: if true;    // screens may still read something here
      allow write: if false;  // disable, because request.auth is null
    }
    match /invites/{inviteId} {
      allow read: if true;    // by-id lookup is fine
      allow write: if false;  // disable without Firebase Auth
    }

    // Catch-all: allow public reads; block writes elsewhere.
    match /{document=**} {
      allow read: if true;
      allow write: if false;
    }
  }
}
